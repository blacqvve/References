@model IEnumerable<CastonFactory.Data.Models.SupportRequest>
@using CastonFactory.Data.Enums

@{
  ViewData["Title"] = "Destek Talepleriniz";
}

<div class="main-content">
  <div class="section__content section__content--p30">
    <div class="container-fluid">
      <div class=" card">
        <div class="card-body">
          <nav>
            @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model, filtered = ViewBag.Filtered })
          </nav>
          <div class="table-responsive table-responsive-data2">
            <table class="table table-data2">
              <thead>
                <tr>
                  <th>
                    @Html.DisplayNameFor(model => model.User.FullName)
                  </th>
                  <th>
                    @Html.DisplayNameFor(model => model.Subject)
                  </th>
                  <th>
                    @Html.DisplayNameFor(model => model.State)
                  </th>
                  <th>
                    @Html.DisplayNameFor(model => model.CreateDate)
                  </th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model)
                {

                  string stateColor = "";
                  switch (item.State)
                  {
                    case CastonFactory.Data.Enums.SupportState.Open:
                      stateColor = "danger";
                      break;
                    case CastonFactory.Data.Enums.SupportState.Resolving:
                      stateColor = "warning";
                      break;
                    case CastonFactory.Data.Enums.SupportState.Closed:
                      stateColor = "success";
                      break;
                    default:
                      stateColor = "info";
                      break;
                  }

                  <tr class="tr-shadow">
                    <td>
                      @Html.DisplayFor(modelItem => item.User.FullName)
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => item.Subject)
                    </td>
                    <td>
                      <span class="badge badge-@stateColor">  @item.State.GetStateText()</span>
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                 
                  </tr>
                  <tr class="spacer"></tr>
                }

              </tbody>
            </table>
            <nav>
              @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
            </nav>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>